000019F2 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/12/2019 13:37:30

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION :
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11               INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =00000280                 81  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 91  -------------------- end include --------------------
00001000                            92              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            93  ; =============================================================================
00001000                            94  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            95  ; =============================================================================
00001000                            96  ;Francisco José Muñoz Navarro 43480416c
00001000                            97  ;Joan Alcover Lladó 45187596w
00001000                            98  ;Francesc Nova Prieto 43483419x
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101              
00001000                           102  ; INITIALIZES THE SYSTEM
00001000                           103  ; INPUT    - NONE
00001000                           104  ; OUTPUT   - NONE
00001000                           105  ; MODIFIES - NONE
00001000                           106  ; -----------------------------------------------------------------------------
00001000  205F                     107              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            108              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            109              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001176            110              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                111              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     112              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     113              RTS
0000101C                           114  
0000101C                           115  ; =============================================================================
0000101C                           116  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           117  ; =============================================================================
0000101C                           118  
0000101C                           119  ; -----------------------------------------------------------------------------
0000101C                           120  SCRINIT
0000101C                           121  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           122  ; INPUT    - NONE
0000101C                           123  ; OUTPUT   - NONE
0000101C                           124  ; MODIFIES - WHATEVER IS REQUIRED, NO NEED TO RESTORE REGISTERS.
0000101C                           125  ; -----------------------------------------------------------------------------
0000101C                           126              ; TO DO:
0000101C                           127              
0000101C                           128              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                129              ORI.W #$0700,SR
00001020                           130              
00001020                           131              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       132              MOVE.L #SCRUPD,($80+SCRTRAP*4)
00001028                           133              
00001028                           134              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                135              MOVE.B #33,D0
0000102C  223C 028001E0            136              MOVE.L #SCRWIDTH<<16|SCRHEIGH,D1
00001032  4E4F                     137              TRAP #15
00001034                           138              
00001034                           139              ; - SET WINDOWED MODE
00001034  7201                     140              MOVE.L #1,D1
00001036  4E4F                     141              TRAP #15     
00001038                           142        
00001038                           143              ; - CLEAR VISIBLE BUFFER
00001038  323C FF00                144              MOVE.W #$FF00,D1
0000103C  103C 000B                145              MOVE.B #11,D0
00001040  4E4F                     146              TRAP #15
00001042                           147  
00001042                           148  
00001042                           149              ; - ENABLE DOUBLE BUFFER
00001042  705C                     150              MOVE.L #92,D0
00001044  7211                     151              MOVE.L #17,D1
00001046  4E4F                     152              TRAP #15
00001048                           153              
00001048                           154              ; - CLEAR HIDDEN BUFFER           
00001048  323C FF00                155              MOVE.W #$FF00,D1
0000104C  103C 000B                156              MOVE.B #11,D0
00001050  4E4F                     157              TRAP #15    
00001052                           158              
00001052                           159              
00001052                           160              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001052                           161              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001052  21FC 0000107E 0064       162              MOVE.L #SCRISR,($60+SCRIRQ*4)
0000105A                           163              
0000105A                           164              
0000105A                           165              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105A                           166              ;   TASK 32)
0000105A                           167              
0000105A  123C 0006                168              MOVE.B #6,D1
0000105E  103C 0020                169              MOVE.B #32,D0
00001062  7401                     170              MOVE.L #SCRIRQ,D2
00001064  843C 0080                171              OR.B #$80,D2
00001068  7614                     172              MOVE.L #SCRTIM,D3
0000106A                           173              
0000106A  4E4F                     174              TRAP #15
0000106C                           175              
0000106C                           176              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001A1C            177              CLR.B SCRINTCT
00001072  4239 00001A1D            178              CLR.B SCRCYCCT
00001078                           179              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                180              ANDI.W #$F8FF,SR
0000107C                           181              
0000107C  4E75                     182              RTS
0000107E                           183  
0000107E                           184  ; -----------------------------------------------------------------------------
0000107E                           185  SCRISR
0000107E                           186  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           187  ; INPUT    - NONE
0000107E                           188  ; OUTPUT   - NONE
0000107E                           189  ; MODIFIES - NONE
0000107E                           190  ; -----------------------------------------------------------------------------
0000107E  5239 00001A1C            191              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001A1D            192              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     193              RTE
0000108C                           194  
0000108C                           195  ; -----------------------------------------------------------------------------
0000108C                           196  SCRUPD
0000108C                           197  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           198  ; BUFFER FOR THE NEXT ONE.
0000108C                           199  ; INPUT    - NONE
0000108C                           200  ; OUTPUT   - NONE
0000108C                           201  ; MODIFIES - NONE
0000108C                           202  ; -----------------------------------------------------------------------------
0000108C                           203              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                204              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                205              MOVE.B #94,D0
00001094  4E4F                     206              TRAP #15
00001096  323C FF00                207              MOVE.W #$FF00,D1
0000109A  103C 000B                208              MOVE.B #11,D0
0000109E  4E4F                     209              TRAP #15 
000010A0  4CDF 0003                210              MOVEM.L (A7)+,D0-D1 
000010A4  4E73                     211              RTE
000010A6                           212  
000010A6                           213  ; =============================================================================
000010A6                           214  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           215  ; =============================================================================
000010A6                           216  
000010A6                           217  ; -----------------------------------------------------------------------------
000010A6                           218  KBDINIT
000010A6                           219  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           220  ; INPUT    - NONE
000010A6                           221  ; OUTPUT   - NONE
000010A6                           222  ; MODIFIES - NONE
000010A6                           223  ; -----------------------------------------------------------------------------
000010A6  4239 00001A1A            224              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001A1B            225              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       226              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     227              RTS
000010BC                           228  
000010BC                           229  ; -----------------------------------------------------------------------------
000010BC                           230  KBDREAD
000010BC                           231  ; TRAP SERVICE ROUTINE.
000010BC                           232  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           233  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           234  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           235  ; INPUT    - NONE
000010BC                           236  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           237  ; MODIFIES - NONE
000010BC                           238  ; -----------------------------------------------------------------------------
000010BC                           239              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC                           240              
000010BC                           241              ;PARA GUARDAR EL ESTADO DE LAS TECLAS LAS CUATRO PRIMERAS EN D1 
000010BC                           242              ;Y LAS CUATRO SIGUIENTES EN D2
000010BC  48E7 E000                243              MOVEM.L D0-D2,-(A7)
000010C0  103C 0013                244              MOVE.B #19,D0
000010C4  223C 25262728            245              MOVE.L #KBDLEFT<<24+KBDUP<<16+KBDRIGHT<<8+KBDDOWN,D1
000010CA  4E4F                     246              TRAP #15
000010CC  2401                     247              MOVE.L  D1,D2
000010CE  223C 204D1050            248              MOVE.L #KBDFIRE1<<24+KBDFIRE2<<16+KBDFIRE3<<8+KBDPAUSE,D1
000010D4  4E4F                     249              TRAP #15
000010D6                           250              ;---------
000010D6                           251              ;---------
000010D6                           252              ;GUARDAMOS EL ANTIGUO VALOR DE KBDVAL PARA USARLO POSTERIORMENT          
000010D6  1039 00001A1A            253              MOVE.B KBDVAL,D0
000010DC                           254              
000010DC                           255              ;INICIALIZAMOS KBDVAL
000010DC  4239 00001A1A            256              CLR.B KBDVAL 
000010E2                           257              ;MIRAMOS CADA UNA DE LAS TECLAS SI HAN SIDO PULSADAS O NO
000010E2                           258              ;SALTAS A LA SIGUIENTE ETIQUETA SI HA SIDO PULSADA
000010E2  0802 0018                259              BTST.L #24,D2
000010E6  6700 000A                260              BEQ  .UP
000010EA  0039 0001 00001A1A       261              ORI.B #KBDMSKLF,KBDVAL 
000010F2                           262              
000010F2  0802 0010                263  .UP         BTST.L #16,D2
000010F6  6700 000A                264              BEQ  .RIGHT
000010FA  0039 0002 00001A1A       265              ORI.B #KBDMSKUP,KBDVAL 
00001102                           266  
00001102  0802 0008                267  .RIGHT      BTST.L #8,D2       
00001106  6700 000A                268              BEQ  .DOWN
0000110A  0039 0004 00001A1A       269              ORI.B #KBDMSKRT,KBDVAL 
00001112                           270              
00001112  0802 0000                271  .DOWN       BTST.L #0,D2       
00001116  6700 000A                272              BEQ  .FIRE1
0000111A  0039 0008 00001A1A       273              ORI.B #KBDMSKDN,KBDVAL  
00001122                           274              
00001122  0801 0018                275  .FIRE1      BTST.L #24,D1       
00001126  6700 000A                276              BEQ  .FIRE2
0000112A  0039 0010 00001A1A       277              ORI.B #KBDMSKF1,KBDVAL   
00001132                           278              
00001132  0801 0010                279  .FIRE2      BTST.L #16,D1       
00001136  6700 000A                280              BEQ  .FIRE3
0000113A  0039 0020 00001A1A       281              ORI.B #KBDMSKF2,KBDVAL  
00001142                           282              
00001142  0801 0008                283  .FIRE3      BTST.L #8,D1       
00001146  6700 000A                284              BEQ  .PAUSE
0000114A  0039 0040 00001A1A       285              ORI.B #KBDMSKF3,KBDVAL 
00001152                           286              
00001152  0801 0000                287  .PAUSE      BTST.L #0,D1       
00001156  6700 000A                288              BEQ  .FIN
0000115A  0039 0080 00001A1A       289              ORI.B #KBDMSKPS,KBDVAL 
00001162                           290              
00001162                           291  .FIN       ;PARA SABER EL NUEVO VALOR DE KBDEDGE ECESITAMOS COMPARAR 
00001162                           292             ;EL ATIGUO VALOR DE KBDVAL CON EL NUEVO 
00001162                           293             ;EL VALOR DE KBDEDGE ESTARA EN D0
00001162  4600                     294              NOT.B   D0
00001164  C039 00001A1A            295              AND.B   KBDVAL ,D0
0000116A  13C0 00001A1B            296              MOVE.B  D0,KBDEDGE 
00001170                           297              
00001170                           298              
00001170  4CDF 0007                299              MOVEM.L (A7)+,D0-D2         
00001174  4E73                     300              RTE
00001176                           301  
00001176                           302  ; =============================================================================
00001176                           303  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001176                           304  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001176                           305  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001176                           306  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001176                           307  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001176                           308  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001176                           309  ; =============================================================================
00001176                           310  
00001176                           311  ; -----------------------------------------------------------------------------
00001176                           312  DMMINIT
00001176                           313  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001176                           314  ; INPUT    - NONE
00001176                           315  ; OUTPUT   - NONE
00001176                           316  ; MODIFIES - NONE
00001176                           317  ; -----------------------------------------------------------------------------
00001176  48E7 8080                318              MOVEM.L D0/A0,-(A7)
0000117A  41F9 00001A40            319              LEA     DMMDATA,A0
00001180  303C 0031                320              MOVE.W  #DMMBNUM-1,D0
00001184  30BC 0000                321  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001188  D1FC 00000040            322              ADD.L   #DMMBSIZE,A0
0000118E  51C8 FFF4                323              DBRA.W  D0,.LOOP
00001192  4CDF 0101                324              MOVEM.L (A7)+,D0/A0
00001196  4E75                     325              RTS
00001198                           326  
00001198                           327  ; -----------------------------------------------------------------------------
00001198                           328  DMMFIRST
00001198                           329  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001198                           330  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001198                           331  ; INPUT    - NONE
00001198                           332  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001198                           333  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001198                           334  ; -----------------------------------------------------------------------------
00001198  41F9 00001A40            335              LEA     DMMDATA,A0
0000119E  4A58                     336  DMMFRLOP    TST.W   (A0)+
000011A0  6600 0016                337              BNE     DMMFRFND
000011A4  D1FC 0000003E            338              ADD.L   #DMMBSIZE-2,A0
000011AA  B1FC 000026BF            339  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
000011B0  6DEC                     340              BLT     DMMFRLOP
000011B2  207C 00000000            341              MOVE.L  #0,A0
000011B8  4E75                     342  DMMFRFND    RTS
000011BA                           343  
000011BA                           344  ; -----------------------------------------------------------------------------
000011BA                           345  DMMNEXT
000011BA                           346  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
000011BA                           347  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
000011BA                           348  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
000011BA                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
000011BA                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011BA                           351  ; -----------------------------------------------------------------------------
000011BA  2F00                     352              MOVE.L  D0,-(A7)
000011BC  2008                     353              MOVE.L  A0,D0
000011BE  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011C4  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011CA  2040                     356              MOVE.L  D0,A0
000011CC  201F                     357              MOVE.L  (A7)+,D0
000011CE  60DA                     358              BRA     DMMFRCOM
000011D0                           359  
000011D0                           360  ; -----------------------------------------------------------------------------
000011D0                           361  DMMFRSTO
000011D0                           362  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
000011D0                           363  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
000011D0                           364  ; INPUT    - D0.W : ID TO SEARCH
000011D0                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
000011D0                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011D0                           367  ; -----------------------------------------------------------------------------
000011D0  41F9 00001A40            368              LEA     DMMDATA,A0
000011D6  B058                     369  DMMFLOOP    CMP.W   (A0)+,D0
000011D8  6700 0016                370              BEQ     DMMFFND
000011DC  D1FC 0000003E            371              ADD.L   #DMMBSIZE-2,A0
000011E2  B1FC 000026BF            372  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
000011E8  6DEC                     373              BLT     DMMFLOOP
000011EA  207C 00000000            374              MOVE.L  #0,A0
000011F0  4E75                     375  DMMFFND     RTS
000011F2                           376  
000011F2                           377  ; -----------------------------------------------------------------------------
000011F2                           378  DMMNEXTO
000011F2                           379  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
000011F2                           380  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
000011F2                           381  ; INPUT    - D0.W : ID TO SEARCH
000011F2                           382  ;            A0   : POINTER WITHIN THE CURRENT SLOT
000011F2                           383  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
000011F2                           384  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011F2                           385  ; -----------------------------------------------------------------------------
000011F2  2F00                     386              MOVE.L  D0,-(A7)
000011F4  2008                     387              MOVE.L  A0,D0
000011F6  C0BC FFFFFFC0            388              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011FC  0680 00000040            389              ADD.L   #DMMBSIZE,D0
00001202  2040                     390              MOVE.L  D0,A0
00001204  201F                     391              MOVE.L  (A7)+,D0
00001206  60DA                     392              BRA     DMMFCOM
00001208                           393  
00001208                           394  ; -----------------------------------------------------------------------------
00001208                           395  DMMALLOC
00001208                           396  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
00001208                           397  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
00001208                           398  ; INPUT    - D0.W : ID TO ASSIGN
00001208                           399  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
00001208                           400  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001208                           401  ; -----------------------------------------------------------------------------
00001208  3F00                     402              MOVE.W  D0,-(A7)
0000120A  4240                     403              CLR.W   D0
0000120C  4EB8 11D0                404              JSR     DMMFRSTO
00001210  301F                     405              MOVE.W  (A7)+,D0
00001212  B1FC 00000000            406              CMP.L   #0,A0
00001218  6700 0006                407              BEQ     .END
0000121C  3140 FFFE                408              MOVE.W  D0,-2(A0)
00001220  4E75                     409  .END        RTS
00001222                           410  
00001222                           411  ; -----------------------------------------------------------------------------
00001222                           412  DMMFREE
00001222                           413  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
00001222                           414  ; SYSTEM (0)
00001222                           415  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
00001222                           416  ; OUTPUT   - NONE
00001222                           417  ; MODIFIES - NONE
00001222                           418  ; -----------------------------------------------------------------------------
00001222  48E7 8080                419              MOVEM.L D0/A0,-(A7)
00001226  2008                     420              MOVE.L  A0,D0
00001228  C0BC FFFFFFC0            421              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000122E  2040                     422              MOVE.L  D0,A0
00001230  4250                     423              CLR.W   (A0)
00001232  4CDF 0101                424              MOVEM.L (A7)+,D0/A0
00001236  4E75                     425              RTS
00001238                           426  
00001238                           427  
00001238                           428  
00001238                           429  
00001238                           430  
00001238                           431  
00001238                           432  
00001238                           433  
00001238                           434  
00001238                           435  
00001238                           436  
00001238                           437  
00001238                           438  
00001238                           439  
00001238                           440  
00001238                           441  
00001238                           442  
00001238                           443  
00001238                           444  
00001238                           445  
00001238                           446  
00001238                           447  
00001238                           448  
00001238                           449  
00001238                           450  
00001238                           451  
00001238                           452  
00001238                           453  
00001238                           454  
00001238                           455  
00001238                           456  
00001238                           457  
00001238                           458  
00001238                           459  
00001238                           460  
00001238                           461  
00001238                           462  -------------------- end include --------------------
00001238                           463              INCLUDE "CONST.X68"             ; USER CONSTANTS
00001238                           464  ; =============================================================================
00001238                           465  ; SYSTEM CONSTANTS
00001238                           466  ; =============================================================================
00001238                           467  
00001238                           468  ; --- GAME STATES -------------------------------------------------------------
00001238                           469  
00001238  =FFFFFFFF                470  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
00001238  =00000000                471  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
00001238  =00000001                472  STAPLAY     EQU     1                       ; NORMAL GAME STATE
00001238  =00000002                473  STAGOVR     EQU     2                       ; GAME OVER STATE
00001238                           474  
00001238                           475  ; --- AGENT TYPES -------------------------------------------------------------
00001238                           476  
00001238  =00000001                477  SHTTYPE     EQU     1
00001238  =00000002                478  ASTTYPE     EQU     2
00001238  =00000003                479  XPLTYPE     EQU     3
00001238                           480  
00001238                           481  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
00001238                           482  
00001238  =000000A0                483  PLRWIDTH    EQU     160                    ; PLAYER WIDTH (PIXELS)
00001238  =0000000F                484  PLRHEIGH    EQU     15                     ; PLAYER HEIGHT (PIXELS)
00001238  =000001F4                485  PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
00001238  =00000005                486  PLRSPEED    EQU     5                       ; PLAYER SPEED (PIXELS PER INT)
00001238  =0000C0FF                487  PLRNRMCL    EQU     $0000C0FF               ; PLAYER NORMAL COLOR
00001238  =000000FF                488  PLRDMGCL    EQU     $000000FF               ; PLAYER DAMAGED COLOR
00001238  =00FFFFFF                489  PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
00001238  =00000002                490  PLRTXTX     EQU     2                       ; SCORE X COORDINATE
00001238  =00000001                491  PLRTXTY     EQU     1                       ; SCORE Y COORDINATE
00001238  =00000014                492  PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
00001238  =000001B8                493  PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
00001238  =000000FF                494  PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
00001238  =00000001                495  PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
00001238  =00000002                496  PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
00001238  =00000000                497  PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
00001238  =00000001                498  PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
00001238                           499  
00001238  =00000003                500  PLRCLIFE     EQU     3                      ; PLAYER CONSTANT LIFE 
00001238                           501  
00001238                           502  ; --- SHOT RELATED CONSTANTS --------------------------------------------------
00001238                           503  
00001238  =00000014                504  SHTWIDTH    EQU     20                      ; SHOT WIDTH (PIXELS)
00001238  =00000003                505  SHTHEIGH    EQU     3                       ; SHOT HEIGHT. ONLY TO DRAW.
00001238  =0000000A                506  SHTSPEED    EQU     10                      ; SHOT SPEED (PIXELS PER INT)
00001238                           507  
00001238                           508  ; --- ASTEROID RELATED CONSTANTS ----------------------------------------------
00001238                           509  
00001238  =0000003C                510  ASTSIZE     EQU     60                      ; ASTEROID DIAMETER
00001238  =00FFFFFF                511  ASTPENCL    EQU     $00FFFFFF               ; ASTEROID PEN COLOR
00001238  =0000FF00                512  ASTFILCL    EQU     $0000FF00               ; ASTEROID FIL COLOR
00001238  =0000000A                513  ASTDMG      EQU     10                      ; ASTEROID DAMAGE TO PLAYER
00001238  =00000005                514  ASTNFRAG    EQU     5                       ; NUMBER OF FRAGMENTS IN EXPLOSION
00001238  =00000005                515  ASTSCORE    EQU     5                       ; SCORE ASTEROID DESTRUCTION
00001238                           516  
00001238                           517  ; --- EXPLOSION RELATED CONSTANTS ---------------------------------------------
00001238                           518  
00001238  =00000014                519  XPLSIZE     EQU     20                      ; EXPLOSION ITEM DIAMETER (PIXELS)
00001238  =00DDDDDD                520  XPLPENCL    EQU     $00DDDDDD               ; EXPLOSION ITEM PEN COLOR
00001238  =00CCCCCC                521  XPLFILCL    EQU     $00CCCCCC               ; EXPLOSION ITEM FIL COLOR
00001238                           522  
00001238                           523  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
00001238                           524  
00001238  =0000001F                525  INTTITX     EQU     31                      ; TITLE X COORDINATE
00001238  =00000005                526  INTTITY     EQU     5                       ; TITLE Y COORDINATE
00001238  =000000FF                527  INTTITC     EQU     $000000FF               ; TITLE COLOR
00001238  =0000001F                528  INTPRSX     EQU     31                      ; PRESS FIRE X COORDINATE
00001238  =0000001A                529  INTPRSY     EQU     26                      ; PRESS FIRE Y COORDINATE
00001238  =00FFFFFF                530  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
00001238                           531  
00001238                           532  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
00001238                           533  
00001238  =00000023                534  GOVSTRX     EQU     35                      ; TITLE X COORDINATE
00001238  =0000000F                535  GOVSTRY     EQU     15                      ; TITLE Y COORDINATE
00001238  =00FFFFFF                536  GOVSTRC     EQU     $00FFFFFF               ; TITLE COLOR
00001238                           537  
00001238                           538  ; --- BOMBMAN RELATED CONSTANTS ------------------------------------------------
00001238                           539  
00001238  =0000001E                540  BMNWIDTH   EQU     30                      ;BOMBMAN WIDTH  (PIXELS)
00001238  =0000001E                541  BMNHEIGH   EQU     30                      ;BOMBMAN HEIGHT (PIXELS)
00001238                           542  
00001238                           543  
00001238                           544  
00001238                           545  
00001238                           546  
00001238                           547  
00001238                           548  
00001238                           549  
00001238                           550  -------------------- end include --------------------
00001238                           551              INCLUDE "UTIL.X68"              ; UTILITY MACRO AND SUBROUTINES
00001238                           552  ; =============================================================================
00001238                           553  ; UTILITY MACROS
00001238                           554  ; =============================================================================
00001238                           555  
00001238                           556  ; -----------------------------------------------------------------------------
00001238                           557  UTLSPEN     MACRO
00001238                           558  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001238                           559  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001238                           560  ; OUTPUT   - NONE
00001238                           561  ; MODIFIES - D0,D1
00001238                           562  ; -----------------------------------------------------------------------------
00001238                           563              MOVE.B  #80,D0
00001238                           564              MOVE.L  \1,D1
00001238                           565              TRAP    #15
00001238                           566              ENDM
00001238                           567  
00001238                           568  ; -----------------------------------------------------------------------------
00001238                           569  UTLSFIL     MACRO
00001238                           570  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001238                           571  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001238                           572  ; OUTPUT   - NONE
00001238                           573  ; MODIFIES - D0,D1
00001238                           574  ; -----------------------------------------------------------------------------
00001238                           575              MOVE.B  #81,D0
00001238                           576              MOVE.L  \1,D1
00001238                           577              TRAP    #15
00001238                           578              ENDM
00001238                           579  
00001238                           580  ; -----------------------------------------------------------------------------
00001238                           581  UTLLOCT     MACRO
00001238                           582  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001238                           583  ; INPUT    - \1 X, \2 Y
00001238                           584  ; OUTPUT   - NONE
00001238                           585  ; MODIFIES - D0,D1
00001238                           586  ; -----------------------------------------------------------------------------
00001238                           587              MOVE.W  #\1<<8|\2, D1
00001238                           588              MOVE.B  #11,D0
00001238                           589              TRAP    #15
00001238                           590              ENDM
00001238                           591  
00001238                           592  ; =============================================================================
00001238                           593  ; UTILITY SUBROUTINES
00001238                           594  ; =============================================================================
00001238                           595  
00001238                           596  ; -----------------------------------------------------------------------------
00001238                           597  UTLINIT
00001238                           598  ; INITIALIZES UTILITY CODE
00001238                           599  ; INPUT    - NONE
00001238                           600  ; OUTPUT   - NONE
00001238                           601  ; MODIFIES - NONE
00001238                           602  ; -----------------------------------------------------------------------------
00001238  4239 000026D6            603              CLR.B   (UTLRNDIX)
0000123E  4E75                     604              RTS
00001240                           605  ; -----------------------------------------------------------------------------
00001240                           606  UTLCHCOL
00001240                           607  ; CHECKS COLLISION
00001240                           608  ; INPUT    - D0.W X0 COORDINATE
00001240                           609  ;            D1.W Y0 COORDINATE
00001240                           610  ;            D2.W X1 COORDINATE
00001240                           611  ;            D3.W Y1 COORDINATE
00001240                           612  ;            D4.W WIDTH 0
00001240                           613  ;            D5.W WIDTH 1
00001240                           614  ;            D6.W HEIGHT 0
00001240                           615  ;            D7.W HEIGHT 1
00001240                           616  ; OUTPUT   - D0.B=FF - COLLISION, =0 - NO COLLISION
00001240                           617  ; MODIFIES - NONE
00001240                           618  ; -----------------------------------------------------------------------------
00001240  48A7 0F00                619              MOVEM.W D4-D7,-(A7)
00001244  D840                     620              ADD.W   D0,D4
00001246  B842                     621              CMP.W   D2,D4
00001248  6F00 0022                622              BLE     .NOCOL
0000124C  DA42                     623              ADD.W   D2,D5
0000124E  BA40                     624              CMP.W   D0,D5
00001250  6F00 001A                625              BLE     .NOCOL
00001254  DC41                     626              ADD.W   D1,D6
00001256  BC43                     627              CMP.W   D3,D6
00001258  6F00 0012                628              BLE     .NOCOL
0000125C  DE43                     629              ADD.W   D3,D7
0000125E  BE41                     630              CMP.W   D1,D7
00001260  6F00 000A                631              BLE     .NOCOL
00001264  103C 00FF                632              MOVE.B  #$FF,D0
00001268  6000 0004                633              BRA     .END
0000126C  4200                     634  .NOCOL      CLR.B   D0
0000126E  4C9F 00F0                635  .END        MOVEM.W (A7)+,D4-D7
00001272  4E75                     636              RTS
00001274                           637  
00001274                           638  ; -----------------------------------------------------------------------------
00001274                           639  UTLRAND
00001274                           640  ; PROVIDES A PSEUDO-RANDOM BYTE
00001274                           641  ; INPUT    - NONE
00001274                           642  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
00001274                           643  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001274                           644  ; -----------------------------------------------------------------------------
00001274  2F08                     645              MOVE.L  A0,-(A7)
00001276  41F9 00001292            646              LEA     .RANDVEC,A0
0000127C  4280                     647              CLR.L   D0
0000127E  1039 000026D6            648              MOVE.B  (UTLRNDIX),D0
00001284  1030 0800                649              MOVE.B  (A0,D0.L),D0
00001288  5239 000026D6            650              ADDQ.B  #1,(UTLRNDIX)
0000128E  205F                     651              MOVE.L  (A7)+,A0
00001290  4E75                     652              RTS
00001292                           653  
00001292                           654  
00001292= A2 EE 9A 0C F5 24 ...    655  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
0000129A= 2A A3 51 26 E0 AC ...    656              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
000012A2= 75 51 CA FD 33 EB ...    657              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
000012AA= 60 CC E7 B8 9A EB ...    658              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
000012B2= 1D 76 B5 95 B0 89 ...    659              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
000012BA= 39 15 48 C9 6E CA ...    660              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
000012C2= 43 E7 E2 7C 37 25 ...    661              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
000012CA= E9 94 CE E9 E4 52 ...    662              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
000012D2= 37 6D 9A 84 A2 28 ...    663              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
000012DA= 19 E2 C6 77 80 D4 ...    664              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
000012E2= 0A 5A 32 67 33 C2 ...    665              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
000012EA= 59 80 DC 0E 57 FC ...    666              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
000012F2= 8A AB BC F7 07 4D ...    667              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
000012FA= EF D5 77 6E 1E BB ...    668              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
00001302= D6 E0 2A 8F BD 28 ...    669              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
0000130A= 13 4F 66 EC 0A 64 ...    670              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
00001312= 56 52 9A 16 9B 90 ...    671              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
0000131A= 06 8A A4 F7 01 DA ...    672              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
00001322= F2 E7 77 28 B1 76 ...    673              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
0000132A= A4 42 E3 81 B1 67 ...    674              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
00001332= BF CE FA 16 BF 38 ...    675              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
0000133A= D1 8B 50 0C 5F 49 ...    676              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
00001342= DE 4C 14 A2 40 DC ...    677              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
0000134A= B6 9B 0A 38 5D AB ...    678              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
00001352= E2 1B DD 75 15 82 ...    679              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
0000135A= 8A 26 51 30 9F 47 ...    680              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
00001362= 1E 8A BB 71 C6 6E ...    681              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
0000136A= 9F 47 E5 34 94 27 ...    682              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
00001372= 7D 06 D6 BA 30 0F ...    683              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
0000137A= EC 7F 7E 03 CF 2D ...    684              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
00001382= 94 5B 23 F2 8B CD ...    685              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
0000138A= 74 33 EC B9 0F D5 ...    686              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
0000138A= 74 33 EC B9 0F D5 ...    687  -------------------- end include --------------------
00001392                           688              INCLUDE "PLAYER.X68"            ; PLAYER MANAGEMENT
00001392                           689  ; =============================================================================
00001392                           690  ; PLAYER MANAGEMENT
00001392                           691  ; =============================================================================
00001392                           692  
00001392                           693  ; -----------------------------------------------------------------------------
00001392                           694  PLRINIT
00001392                           695  ; INITIALIZES THE PLAYER
00001392                           696  ; INPUT    - NONE
00001392                           697  ; OUTPUT   - NONE
00001392                           698  ; MODIFIES - NONE
00001392                           699  ; -----------------------------------------------------------------------------
00001392  33FC 0140 000026C4       700              MOVE.W  #SCRWIDTH/2,(PLRPOSX)
0000139A  33FC 019F 000026C6       701              MOVE.W  #(SCRHEIGH-PLRHEIGH)-50,(PLRPOSY)
000013A2  33FC 01F4 000026C8       702              MOVE.W  #PLRINIEN,(PLRENER)
000013AA  4279 000026CA            703              CLR.W   (PLRSCORE)
000013B0  4279 000026CE            704              CLR.W   (PLRDMG)
000013B6  4E75                     705              RTS
000013B8                           706  
000013B8                           707  ; -----------------------------------------------------------------------------
000013B8                           708  PLRUPD
000013B8                           709  ; UPDATES THE PLAYER MOTION
000013B8                           710  ; INPUT    - NONE (ACCESSES KBDVAL AND KBDEDGE)
000013B8                           711  ; OUTPUT   - NONE (MODIFIES PLAYER DATA)
000013B8                           712  ; MODIFIES - NONE
000013B8                           713  ; -----------------------------------------------------------------------------
000013B8  08B9 0000 000026CE       714              BCLR.B  #PLRUBDMG,(PLRDMG)
000013C0  6700 0016                715              BEQ     .NODMG
000013C4  0479 000A 000026C8       716              SUB.W   #ASTDMG,(PLRENER)
000013CC  6E00 000A                717              BGT     .NODMG
000013D0  33FC 0002 000026C2       718              MOVE.W  #STAGOVR,(STANEXT)      ; IF LIFE IS 0, GAME OVER
000013D8  3F01                     719  .NODMG      MOVE.W  D1,-(A7)
000013DA  1239 00001A1A            720              MOVE.B  (KBDVAL),D1             ; PERFORM MOTION AND CHECK BOUNDS.
000013E0  E219                     721              ROR.B   #1,D1
000013E2  6400 0018                722              BCC     .CHKUP
000013E6  5B79 000026C4            723              SUB.W   #PLRSPEED,(PLRPOSX)
000013EC  4A79 000026C4            724              TST.W   (PLRPOSX)
000013F2  6C00 0008                725              BGE     .CHKUP
000013F6  4279 000026C4            726              CLR.W   (PLRPOSX)
000013FC  E219                     727  .CHKUP      ROR.B   #1,D1
000013FE  6400 0018                728              BCC     .CHKRT
00001402  5B79 000026C6            729              SUB.W   #PLRSPEED,(PLRPOSY)
00001408  4A79 000026C6            730              TST.W   (PLRPOSY)
0000140E  6C00 0008                731              BGE     .CHKRT
00001412  4279 000026C6            732              CLR.W   (PLRPOSY)
00001418  E219                     733  .CHKRT      ROR.B   #1,D1
0000141A  6400 001C                734              BCC     .CHKDN
0000141E  5A79 000026C4            735              ADD.W   #PLRSPEED,(PLRPOSX)
00001424  0C79 01E0 000026C4       736              CMP.W   #SCRWIDTH-PLRWIDTH,(PLRPOSX)
0000142C  6F00 000A                737              BLE     .CHKDN
00001430  33FC 01E0 000026C4       738              MOVE.W  #SCRWIDTH-PLRWIDTH,(PLRPOSX)
00001438  E219                     739  .CHKDN      ROR.B   #1,D1
0000143A  6400 001C                740              BCC     .MDONE
0000143E  5A79 000026C6            741              ADD.W   #PLRSPEED,(PLRPOSY)
00001444  0C79 01D1 000026C6       742              CMP.W   #SCRHEIGH-PLRHEIGH,(PLRPOSY)
0000144C  6F00 000A                743              BLE     .MDONE
00001450  33FC 01D1 000026C6       744              MOVE.W  #SCRHEIGH-PLRHEIGH,(PLRPOSY)
00001458  0839 0004 00001A1B       745  .MDONE      BTST.B  #KBDBITF1,(KBDEDGE)
00001460  6700 0032                746              BEQ     .NOFIRE
00001464  48E7 E070                747              MOVEM.L A1-A3/D0-D2,-(A7)
00001468  43F9 000015C4            748              LEA     SHTINIT,A1
0000146E  45F9 000015CC            749              LEA     SHTUPD,A2
00001474  47F9 0000163E            750              LEA     SHTPLOT,A3
0000147A  303C 0001                751              MOVE.W  #SHTTYPE,D0
0000147E  3239 000026C4            752              MOVE.W  (PLRPOSX),D1
00001484  3439 000026C6            753              MOVE.W  (PLRPOSY),D2
0000148A  4EB9 00001560            754              JSR     AGLADD
00001490  4CDF 0E07                755              MOVEM.L (A7)+,A1-A3/D0-D2
00001494  321F                     756  .NOFIRE     MOVE.W  (A7)+,D1
00001496  4E75                     757              RTS
00001498                           758  
00001498                           759  ; -----------------------------------------------------------------------------
00001498                           760  PLRPLOT
00001498                           761  ; PLOTS THE PLAYER ITS LIFE AND THE SCORE
00001498                           762  ; INPUT    - NONE
00001498                           763  ; OUTPUT   - NONE
00001498                           764  ; MODIFIES - NONE
00001498                           765  ; -----------------------------------------------------------------------------
00001498  48E7 F800                766              MOVEM.L D0-D4,-(A7)
0000149C  223C 0000C0FF            767              MOVE.L  #PLRNRMCL,D1            ; DECIDE COLOR
000014A2  08B9 0001 000026CE       768              BCLR.B  #PLRPBDMG,(PLRDMG)
000014AA  6700 0008                769              BEQ     .NODMG
000014AE  223C 000000FF            770              MOVE.L  #PLRDMGCL,D1
000014B4  103C 0050                771  .NODMG      MOVE.B  #80,D0
000014B8  4E4F                     772              TRAP    #15
000014BA  5200                     773              ADDQ.B  #1,D0
000014BC  4E4F                     774              TRAP    #15
000014BE                           775              
000014BE  3239 000026C4            776              MOVE.W  (PLRPOSX),D1            ; PLOT THE PLAYER
000014C4  3439 000026C6            777              MOVE.W  (PLRPOSY),D2
000014CA  3601                     778              MOVE.W  D1,D3
000014CC  3802                     779              MOVE.W  D2,D4
000014CE  0643 0050                780              ADD.W   #PLRWIDTH/2,D3
000014D2  5E44                     781              ADD.W   #PLRHEIGH/2,D4
000014D4  103C 0058                782              MOVE.B  #88,D0
000014D8  4E4F                     783              TRAP    #15
000014DA                           784  
000014DA  0443 0050                785              SUB.W   #PLRWIDTH/2,D3
000014DE  103C 0057                786              MOVE.B  #87,D0
000014E2  4E4F                     787              TRAP    #15
000014E4                           788  
000014E4                           789m             UTLSPEN #PLRTXTCL               ; PLOT THE SCORE TEXT
000014E4                           790m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000014E4                           791m ; INPUT    - #PLRTXTCL COLOR IN FORMAT $00BBGGRR
000014E4                           792m ; OUTPUT   - NONE
000014E4                           793m ; MODIFIES - D0,D1
000014E4                           794m ; -----------------------------------------------------------------------------
000014F0                           795m             UTLSFIL #$00000000
000014F0                           796m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000014F0                           797m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000014F0                           798m ; OUTPUT   - NONE
000014F0                           799m ; MODIFIES - D0,D1
000014F0                           800m ; -----------------------------------------------------------------------------
000014F8                           801m             UTLLOCT PLRTXTX,PLRTXTY
000014F8                           802m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000014F8                           803m ; INPUT    - PLRTXTX X, PLRTXTY Y
000014F8                           804m ; OUTPUT   - NONE
000014F8                           805m ; MODIFIES - D0,D1
000014F8                           806m ; -----------------------------------------------------------------------------
00001502  43F9 00001558            807              LEA     .SCORESTR,A1
00001508  4281                     808              CLR.L   D1
0000150A  3239 000026CA            809              MOVE.W  (PLRSCORE),D1
00001510  103C 0011                810              MOVE.B  #17,D0
00001514  4E4F                     811              TRAP    #15
00001516                           812  
00001516                           813m             UTLSPEN #$00FFFFFF              ; PLOT LIFE
00001516                           814m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001516                           815m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001516                           816m ; OUTPUT   - NONE
00001516                           817m ; MODIFIES - D0,D1
00001516                           818m ; -----------------------------------------------------------------------------
00001522                           819m             UTLSFIL #PLRLIFEC
00001522                           820m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001522                           821m ; INPUT    - #PLRLIFEC COLOR IN FORMAT $00BBGGRR
00001522                           822m ; OUTPUT   - NONE
00001522                           823m ; MODIFIES - D0,D1
00001522                           824m ; -----------------------------------------------------------------------------
0000152E  323C 0046                825              MOVE.W  #(SCRWIDTH-PLRINIEN)/2,D1
00001532  343C 01B8                826              MOVE.W  #PLRLIFEY,D2
00001536  3639 000026C8            827              MOVE.W  (PLRENER),D3
0000153C  D641                     828              ADD.W   D1,D3
0000153E  383C 01CC                829              MOVE.W  #PLRLIFEY+PLRLIFEH,D4
00001542  103C 0057                830              MOVE.B  #87,D0
00001546  4E4F                     831              TRAP    #15
00001548  363C 023A                832              MOVE.W  #(SCRWIDTH+PLRINIEN)/2,D3
0000154C  103C 005A                833              MOVE.B  #90,D0
00001550  4E4F                     834              TRAP    #15
00001552                           835  
00001552  4CDF 001F                836              MOVEM.L (A7)+,D0-D4
00001556  4E75                     837              RTS
00001558= 53 43 4F 52 45 3A ...    838  .SCORESTR   DC.B    'SCORE: ',0
00001560                           839  
00001560                           840  
00001560                           841  
00001560                           842  
00001560                           843  
00001560                           844  
00001560                           845  -------------------- end include --------------------
00001560                           846              INCLUDE "AGENTLST.X68"          ; AGENT LIST MANAGEMENT
00001560                           847  ; =============================================================================
00001560                           848  ; AGENT MANAGEMENT
00001560                           849  ; EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
00001560                           850  ; +0 - LONG : UPDATE SUBROUTINE POINTER
00001560                           851  ; +4 - LONG : PLOT SUBROUTINE POINTER
00001560                           852  ; +8:END    : DATA (AGENT SPECIFIC)
00001560                           853  ; =============================================================================
00001560                           854  
00001560                           855  ; -----------------------------------------------------------------------------
00001560                           856  AGLADD
00001560                           857  ; CREATES A NEW AGENT
00001560                           858  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
00001560                           859  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
00001560                           860  ;            A3 - POINTER TO AGENT PLOT FUNCTION
00001560                           861  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
00001560                           862  ;            D1 - AGENT INITIALIZATION PARAMETER 1
00001560                           863  ;            D2 - AGENT INITIALIZATION PARAMETER 2
00001560                           864  ;            D3 - AGENT INITIALIZATION PARAMETER 3
00001560                           865  ; OUTPUT   - NONE
00001560                           866  ; MODIFIES - NONE
00001560                           867  ; -----------------------------------------------------------------------------
00001560  2F08                     868              MOVE.L  A0,-(A7)
00001562  4EB8 1208                869              JSR     DMMALLOC
00001566  B1FC 00000000            870              CMP.L   #0,A0
0000156C  6700 0008                871              BEQ     .END
00001570  20CA                     872              MOVE.L  A2,(A0)+
00001572  20CB                     873              MOVE.L  A3,(A0)+
00001574  4E91                     874              JSR     (A1)
00001576  205F                     875  .END        MOVE.L  (A7)+,A0
00001578  4E75                     876              RTS
0000157A                           877  
0000157A                           878  ; -----------------------------------------------------------------------------
0000157A                           879  AGLUPD
0000157A                           880  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
0000157A                           881  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
0000157A                           882  ; INPUT    - NONE
0000157A                           883  ; OUTPUT   - NONE
0000157A                           884  ; MODIFIES - NONE
0000157A                           885  ; -----------------------------------------------------------------------------
0000157A  48E7 00C0                886              MOVEM.L A0-A1,-(A7)
0000157E  4EB8 1198                887              JSR     DMMFIRST
00001582  B1FC 00000000            888  .LOOP       CMP.L   #0,A0
00001588  6700 000E                889              BEQ     .END
0000158C  2250                     890              MOVE.L  (A0),A1
0000158E  5088                     891              ADD.L   #8,A0
00001590  4E91                     892              JSR     (A1)
00001592  4EB8 11BA                893              JSR     DMMNEXT
00001596  60EA                     894              BRA     .LOOP
00001598  4CDF 0300                895  .END        MOVEM.L (A7)+,A0-A1
0000159C  4E75                     896              RTS
0000159E                           897  
0000159E                           898  ; -----------------------------------------------------------------------------
0000159E                           899  AGLPLOT
0000159E                           900  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
0000159E                           901  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
0000159E                           902  ; INPUT    - NONE
0000159E                           903  ; OUTPUT   - NONE
0000159E                           904  ; MODIFIES - NONE
0000159E                           905  ; -----------------------------------------------------------------------------
0000159E  48E7 00C0                906              MOVEM.L A0-A1,-(A7)
000015A2  4EB8 1198                907              JSR     DMMFIRST
000015A6  B1FC 00000000            908  .LOOP       CMP.L   #0,A0
000015AC  6700 0010                909              BEQ     .END
000015B0  2268 0004                910              MOVE.L  4(A0),A1
000015B4  5088                     911              ADD.L   #8,A0
000015B6  4E91                     912              JSR     (A1)
000015B8  4EB8 11BA                913              JSR     DMMNEXT
000015BC  60E8                     914              BRA     .LOOP
000015BE  4CDF 0300                915  .END        MOVEM.L (A7)+,A0-A1
000015C2  4E75                     916              RTS
000015C4                           917  
000015C4                           918  ; -----------------------------------------------------------------------------
000015C4  =00001222                919  AGLKILL     EQU     DMMFREE
000015C4                           920  ; KILLS THE AGENT BY RELEASING ITS MEMORY
000015C4                           921  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
000015C4                           922  ; OUTPUT   - NONE
000015C4                           923  ; MODIFIES - NONE
000015C4                           924  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
000015C4                           925  ; -----------------------------------------------------------------------------
000015C4                           926  
000015C4                           927  
000015C4                           928  -------------------- end include --------------------
000015C4                           929              INCLUDE "SHOT.X68"              ; SHOT AGENT MANAGEMENT
000015C4                           930  ; =============================================================================
000015C4                           931  ; SHOT MANAGEMENT. IT IS AN AGENT.
000015C4                           932  ; LOCAL MEMORY IS:
000015C4                           933  ; +0 WORD X COORDINATE
000015C4                           934  ; +2 WORD Y COORDINATE
000015C4                           935  ; =============================================================================
000015C4                           936  
000015C4                           937  ; -----------------------------------------------------------------------------
000015C4                           938  SHTINIT
000015C4                           939  ; INITALIZES A SHOT
000015C4                           940  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
000015C4                           941  ;            D1.W INITIAL X COORDINATE
000015C4                           942  ;            D2.W INITIAL Y COORDINATE
000015C4                           943  ; OUTPUT   - NONE
000015C4                           944  ; MODIFIES - NONE
000015C4                           945  ; -----------------------------------------------------------------------------
000015C4  3081                     946              MOVE.W  D1,(A0)
000015C6  3142 0002                947              MOVE.W  D2,2(A0)
000015CA  4E75                     948              RTS
000015CC                           949  
000015CC                           950  ; -----------------------------------------------------------------------------
000015CC                           951  SHTUPD
000015CC                           952  ; UPDATES A SHOT BY MOVING IT RIGHTWARD.
000015CC                           953  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
000015CC                           954  ; OUTPUT   - NONE
000015CC                           955  ; MODIFIES - NONE
000015CC                           956  ; -----------------------------------------------------------------------------
000015CC  0650 000A                957              ADD.W   #SHTSPEED,(A0)          ; MOVE
000015D0  0C50 026C                958              CMP.W   #SCRWIDTH-SHTWIDTH,(A0) ; KILL IF OUT OF SCREEN
000015D4  6C00 FC4C                959              BGE     AGLKILL
000015D8  48E7 FFC0                960              MOVEM.L A0-A1/D0-D7,-(A7)
000015DC  3410                     961              MOVE.W  (A0),D2                 ; PREPARE SHOT COORDINATES FOR
000015DE  3628 0002                962              MOVE.W  2(A0),D3                ; COLLISION CHECK
000015E2  3A3C 0014                963              MOVE.W  #SHTWIDTH,D5
000015E6  3E3C 000F                964              MOVE.W  #PLRHEIGH,D7
000015EA  2248                     965              MOVE.L  A0,A1
000015EC  303C 0002                966              MOVE.W  #ASTTYPE,D0             ; LOOP THROUGH ALL ASTEROIDS
000015F0  4EB8 11D0                967              JSR     DMMFRSTO
000015F4  B1FC 00000000            968  .LOOP       CMP.L   #0,A0
000015FA  6700 0026                969              BEQ     .END
000015FE  3028 0008                970              MOVE.W  8(A0),D0
00001602  3228 000A                971              MOVE.W  10(A0),D1
00001606  383C 003C                972              MOVE.W  #ASTSIZE,D4
0000160A  3C3C 003C                973              MOVE.W  #ASTSIZE,D6
0000160E  4EB8 1240                974              JSR     UTLCHCOL
00001612  4A00                     975              TST.B   D0
00001614  6600 0012                976              BNE     .EXPLO                  ; IF COLLISION, EXPLODE IT
00001618  303C 0002                977              MOVE.W  #ASTTYPE,D0
0000161C  4EB8 11F2                978              JSR     DMMNEXTO
00001620  60D2                     979              BRA     .LOOP
00001622  4CDF 03FF                980  .END        MOVEM.L (A7)+,A0-A1/D0-D7
00001626  4E75                     981              RTS
00001628  5088                     982  .EXPLO      ADD.L   #8,A0
0000162A  4EB9 0000174A            983              JSR     ASTXPLO                 ; EXPLODE ASTEROID
00001630  2049                     984              MOVE.L  A1,A0
00001632  4EB8 1222                985              JSR     AGLKILL                 ; DESTROY SHOT
00001636  5A79 000026CA            986              ADD.W   #ASTSCORE,(PLRSCORE)    ; INCREASE SCORE
0000163C  60E4                     987              BRA     .END
0000163E                           988  
0000163E                           989  ; -----------------------------------------------------------------------------
0000163E                           990  SHTPLOT
0000163E                           991  ; PLOTS THE SHOT.
0000163E                           992  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
0000163E                           993  ; OUTPUT   - NONE
0000163E                           994  ; MODIFIES - NONE
0000163E                           995  ; -----------------------------------------------------------------------------
0000163E  48E7 7880                996              MOVEM.L     A0/D1-D4,-(A7)
00001642                           997m             UTLSPEN     #$00FFFFFF
00001642                           998m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001642                           999m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001642                          1000m ; OUTPUT   - NONE
00001642                          1001m ; MODIFIES - D0,D1
00001642                          1002m ; -----------------------------------------------------------------------------
0000164E                          1003m             UTLSFIL     #$000000FF
0000164E                          1004m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000164E                          1005m ; INPUT    - #$000000FF COLOR IN FORMAT $00BBGGRR
0000164E                          1006m ; OUTPUT   - NONE
0000164E                          1007m ; MODIFIES - D0,D1
0000164E                          1008m ; -----------------------------------------------------------------------------
0000165A  3218                    1009              MOVE.W      (A0)+,D1
0000165C  3410                    1010              MOVE.W      (A0),D2
0000165E  3601                    1011              MOVE.W      D1,D3
00001660  3802                    1012              MOVE.W      D2,D4
00001662  0643 0014               1013              ADD.W       #SHTWIDTH,D3
00001666  5644                    1014              ADD.W       #SHTHEIGH,D4
00001668  103C 0057               1015              MOVE.B      #87,D0
0000166C  4E4F                    1016              TRAP        #15
0000166E  0642 000C               1017              ADD.W       #PLRHEIGH-SHTHEIGH,D2
00001672  0644 000C               1018              ADD.W       #PLRHEIGH-SHTHEIGH,D4
00001676  4E4F                    1019              TRAP        #15
00001678  4CDF 011E               1020              MOVEM.L     (A7)+,A0/D1-D4
0000167C  4E75                    1021              RTS
0000167C  4E75                    1022  -------------------- end include --------------------
0000167E                          1023              INCLUDE "ASTEROID.X68"          ; ASTEROID AGENT MANAGEMENT
0000167E                          1024  ; =============================================================================
0000167E                          1025  ; ASTEROID MANAGEMENT. IT IS AN AGENT.
0000167E                          1026  ; LOCAL MEMORY IS:
0000167E                          1027  ; +0 WORD X COORDINATE
0000167E                          1028  ; +2 WORD Y COORDINATE
0000167E                          1029  ; +4 WORD X SPEED
0000167E                          1030  ; +6 WORD Y SPEED
0000167E                          1031  ; =============================================================================
0000167E                          1032  
0000167E                          1033  ; -----------------------------------------------------------------------------
0000167E                          1034  ASTINIT
0000167E                          1035  ; INITALIZES AN ASTEROID
0000167E                          1036  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
0000167E                          1037  ; OUTPUT   - NONE
0000167E                          1038  ; MODIFIES - NONE
0000167E                          1039  ; NOTE     - ASSUMES SCRHEIGH IS GREATER THAN 255
0000167E                          1040  ; -----------------------------------------------------------------------------
0000167E  3F00                    1041              MOVE.W  D0,-(A7)
00001680  4EB8 1274               1042              JSR     UTLRAND
00001684  0640 0052               1043              ADD.W   #(SCRHEIGH-255-ASTSIZE)/2, D0
00001688  30BC 0280               1044              MOVE.W  #SCRWIDTH,(A0)          ; X POSITION
0000168C  3140 0002               1045              MOVE.W  D0,2(A0)                ; Y POSITION (PSEUDO-RANDOM)
00001690  4EB8 1274               1046              JSR     UTLRAND
00001694  C07C 000F               1047              AND.W   #$000F,D0               ; X SPEED (PSEUDO-RANDOM)
00001698  3140 0004               1048              MOVE.W  D0,4(A0)
0000169C  5F40                    1049              SUBQ.W  #7,D0
0000169E  3140 0006               1050              MOVE.W  D0,6(A0)                ; Y SPEED (PSEUDO-RANDOM)
000016A2  301F                    1051              MOVE.W  (A7)+,D0
000016A4  4E75                    1052              RTS
000016A6                          1053  
000016A6                          1054  ; -----------------------------------------------------------------------------
000016A6                          1055  ASTUPD
000016A6                          1056  ; UPDATES AN ASTEROID
000016A6                          1057  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
000016A6                          1058  ; OUTPUT   - NONE
000016A6                          1059  ; MODIFIES - NONE
000016A6                          1060  ; -----------------------------------------------------------------------------
000016A6  3F00                    1061              MOVE.W  D0,-(A7)
000016A8  3028 0004               1062              MOVE.W  4(A0),D0                ; UPDATE COORDINATES
000016AC  9150                    1063              SUB.W   D0,(A0)
000016AE  3028 0006               1064              MOVE.W  6(A0),D0
000016B2  D168 0002               1065              ADD.W   D0,2(A0)
000016B6  0C50 FFC4               1066              CMP.W   #-ASTSIZE,(A0)          ; CHECK BOUNCE
000016BA  6D00 004E               1067              BLT     .KILL
000016BE  4A68 0002               1068              TST.W   2(A0)
000016C2  6F00 000C               1069              BLE     .BOUNCE
000016C6  0C68 01A4 0002          1070              CMP.W   #SCRHEIGH-ASTSIZE,2(A0)
000016CC  6D00 0006               1071              BLT     .COLPLAY
000016D0  4468 0006               1072  .BOUNCE     NEG.W   6(A0)
000016D4  3010                    1073  .COLPLAY    MOVE.W  (A0),D0
000016D6  3228 0002               1074              MOVE.W  2(A0),D1
000016DA  383C 003C               1075              MOVE.W  #ASTSIZE,D4
000016DE  3C04                    1076              MOVE.W  D4,D6
000016E0  3439 000026C4           1077              MOVE.W  (PLRPOSX),D2
000016E6  3639 000026C6           1078              MOVE.W  (PLRPOSY),D3
000016EC  3A3C 00A0               1079              MOVE.W  #PLRWIDTH,D5
000016F0  3E3C 000F               1080              MOVE.W  #PLRHEIGH,D7
000016F4  4EB8 1240               1081              JSR     UTLCHCOL
000016F8  4A00                    1082              TST.B   D0
000016FA  6700 000A               1083              BEQ     .END
000016FE  13FC 0003 000026CE      1084              MOVE.B  #PLRUMDMG|PLRPMDMG,(PLRDMG)
00001706                          1085  
00001706  301F                    1086  .END        MOVE.W  (A7)+,D0
00001708  4E75                    1087              RTS
0000170A  4EB8 1222               1088  .KILL       JSR     AGLKILL
0000170E  60C4                    1089              BRA     .COLPLAY
00001710                          1090  
00001710                          1091  ; -----------------------------------------------------------------------------
00001710                          1092  ASTPLOT
00001710                          1093  ; PLOTS AN ASTEROID
00001710                          1094  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
00001710                          1095  ; OUTPUT   - NONE
00001710                          1096  ; MODIFIES - NONE
00001710                          1097  ; -----------------------------------------------------------------------------
00001710                          1098m             UTLSPEN #ASTPENCL
00001710                          1099m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001710                          1100m ; INPUT    - #ASTPENCL COLOR IN FORMAT $00BBGGRR
00001710                          1101m ; OUTPUT   - NONE
00001710                          1102m ; MODIFIES - D0,D1
00001710                          1103m ; -----------------------------------------------------------------------------
0000171C                          1104m             UTLSFIL #ASTFILCL
0000171C                          1105m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000171C                          1106m ; INPUT    - #ASTFILCL COLOR IN FORMAT $00BBGGRR
0000171C                          1107m ; OUTPUT   - NONE
0000171C                          1108m ; MODIFIES - D0,D1
0000171C                          1109m ; -----------------------------------------------------------------------------
00001728  48A7 7800               1110              MOVEM.W D1-D4,-(A7)
0000172C  3210                    1111              MOVE.W  (A0),D1
0000172E  3428 0002               1112              MOVE.W  2(A0),D2
00001732  3601                    1113              MOVE.W  D1,D3
00001734  3802                    1114              MOVE.W  D2,D4
00001736  0643 003C               1115              ADD.W   #ASTSIZE,D3
0000173A  0644 003C               1116              ADD.W   #ASTSIZE,D4
0000173E  103C 0058               1117              MOVE.B  #88,D0
00001742  4E4F                    1118              TRAP    #15
00001744  4C9F 001E               1119              MOVEM.W (A7)+,D1-D4
00001748  4E75                    1120              RTS
0000174A                          1121  
0000174A                          1122  ; -----------------------------------------------------------------------------
0000174A                          1123  ASTXPLO
0000174A                          1124  ; EXPLODES AN ASTEROID
0000174A                          1125  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
0000174A                          1126  ; OUTPUT   - NONE
0000174A                          1127  ; MODIFIES - NONE
0000174A                          1128  ; -----------------------------------------------------------------------------
0000174A  48E7 F870               1129              MOVEM.L A1-A3/D0-D4,-(A7)
0000174E  383C 0005               1130              MOVE.W  #ASTNFRAG,D4
00001752  43F9 000017B4           1131  .LOOP       LEA     XPLINIT,A1
00001758  45F9 000017E4           1132              LEA     XPLUPD,A2
0000175E  47F9 00001822           1133              LEA     XPLPLOT,A3
00001764  303C 0003               1134              MOVE.W  #XPLTYPE,D0
00001768  3210                    1135              MOVE.W  (A0),D1
0000176A  0641 001E               1136              ADD.W   #ASTSIZE/2,D1
0000176E  3428 0002               1137              MOVE.W  2(A0),D2
00001772  0642 001E               1138              ADD.W   #ASTSIZE/2,D2
00001776  4EB8 1560               1139              JSR     AGLADD
0000177A  51CC FFD6               1140              DBRA.W  D4,.LOOP
0000177E  4EB8 1222               1141              JSR     AGLKILL
00001782  4CDF 0E1F               1142              MOVEM.L (A7)+,A1-A3/D0-D4
00001786  4E75                    1143              RTS
00001788                          1144  
00001788                          1145  -------------------- end include --------------------
00001788                          1146              INCLUDE "SPAWNER.X68"           ; SPAWNER (CREATES ASTEROIDS)
00001788                          1147  ; =============================================================================
00001788                          1148  ; SPAWNER MANAGEMENT.
00001788                          1149  ; =============================================================================
00001788                          1150  
00001788                          1151  ; -----------------------------------------------------------------------------
00001788                          1152  SPWUPD
00001788                          1153  ; UPDATES THE SPAWNER
00001788                          1154  ; INPUT    - NONE
00001788                          1155  ; OUTPUT   - NONE
00001788                          1156  ; MODIFIES - NONE
00001788                          1157  ; -----------------------------------------------------------------------------
00001788  48E7 8070               1158              MOVEM.L  D0/A1-A3,-(A7)
0000178C  1039 00001A1D           1159              MOVE.B  (SCRCYCCT),D0
00001792  C07C 000F               1160              AND     #$0F,D0                 ; EVERY 16 CYCLES
00001796  6600 0016               1161              BNE     .END                    ; CREATE A NEW ASTEROID
0000179A  43F8 167E               1162              LEA     ASTINIT,A1
0000179E  45F8 16A6               1163              LEA     ASTUPD,A2
000017A2  47F8 1710               1164              LEA     ASTPLOT,A3
000017A6  303C 0002               1165              MOVE.W  #ASTTYPE,D0
000017AA  4EB8 1560               1166              JSR     AGLADD
000017AE  4CDF 0E01               1167  .END        MOVEM.L (A7)+,D0/A1-A3
000017B2  4E75                    1168              RTS
000017B2  4E75                    1169  -------------------- end include --------------------
000017B4                          1170              INCLUDE "XPLOSION.X68"          ; EXPLOSION AGENT MANAGEMENT
000017B4                          1171  ; =============================================================================
000017B4                          1172  ; EXPLOSTION MANAGEMENT. IS AN AGENT.
000017B4                          1173  ; LOCAL MEMORY IS:
000017B4                          1174  ; +0 WORD X COORDINATE
000017B4                          1175  ; +2 WORD Y COORDINATE
000017B4                          1176  ; +4 WORD X SPEED
000017B4                          1177  ; +6 WORD Y SPEED
000017B4                          1178  ; =============================================================================
000017B4                          1179  
000017B4                          1180  ; -----------------------------------------------------------------------------
000017B4                          1181  XPLINIT
000017B4                          1182  ; INITALIZES AN EXPLOSION ITEM
000017B4                          1183  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
000017B4                          1184  ;            D1 X COORDINATE
000017B4                          1185  ;            D2 Y COORDINATE
000017B4                          1186  ; OUTPUT   - NONE
000017B4                          1187  ; MODIFIES - NONE
000017B4                          1188  ; NOTE     - ASSUMES SCRHEIGH IS GREATER THAN 255
000017B4                          1189  ; -----------------------------------------------------------------------------
000017B4  48E7 E000               1190              MOVEM.L D0-D2,-(A7)
000017B8  3081                    1191              MOVE.W  D1,(A0)                 ; SET X POSITION
000017BA  3142 0002               1192              MOVE.W  D2,2(A0)                ; SET Y POSITION
000017BE  4EB8 1274               1193              JSR     UTLRAND                 ; SET RANDOM SPEEDS
000017C2  C07C 001F               1194              AND.W   #$01F,D0
000017C6  0440 000F               1195              SUB.W   #$0F,D0
000017CA  3140 0004               1196              MOVE.W  D0,4(A0)
000017CE  4EB8 1274               1197              JSR     UTLRAND
000017D2  C07C 001F               1198              AND.W   #$01F,D0
000017D6  0440 000F               1199              SUB.W   #$0F,D0
000017DA  3140 0006               1200              MOVE.W  D0,6(A0)
000017DE  4CDF 0007               1201              MOVEM.L (A7)+,D0-D2
000017E2  4E75                    1202              RTS
000017E4                          1203  
000017E4                          1204  ; -----------------------------------------------------------------------------
000017E4                          1205  XPLUPD
000017E4                          1206  ; UPDATES AN EXPLOSION ITEM
000017E4                          1207  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
000017E4                          1208  ; OUTPUT   - NONE
000017E4                          1209  ; MODIFIES - NONE
000017E4                          1210  ; -----------------------------------------------------------------------------
000017E4  3F00                    1211              MOVE.W  D0,-(A7)
000017E6  3028 0004               1212              MOVE.W  4(A0),D0                ; UPDATE COORDINATES
000017EA  9150                    1213              SUB.W   D0,(A0)
000017EC  3028 0006               1214              MOVE.W  6(A0),D0
000017F0  D168 0002               1215              ADD.W   D0,2(A0)
000017F4  0C50 FFEC               1216              CMP.W   #-XPLSIZE,(A0)
000017F8  6F00 0022               1217              BLE     .KILL
000017FC  0C50 0280               1218              CMP.W   #SCRWIDTH,(A0)
00001800  6C00 001A               1219              BGE     .KILL
00001804  0C68 FFEC 0002          1220              CMP.W   #-XPLSIZE,2(A0)
0000180A  6F00 0010               1221              BLE     .KILL
0000180E  0C68 01E0 0002          1222              CMP.W   #SCRHEIGH,2(A0)
00001814  6C00 0006               1223              BGE     .KILL
00001818  301F                    1224  .END        MOVE.W  (A7)+,D0
0000181A  4E75                    1225              RTS
0000181C  4EB8 1222               1226  .KILL       JSR   AGLKILL
00001820  60F6                    1227              BRA   .END
00001822                          1228  
00001822                          1229  ; -----------------------------------------------------------------------------
00001822                          1230  XPLPLOT
00001822                          1231  ; PLOTS AN EXPLOSION ITEM
00001822                          1232  ; INPUT    - A0 POINTER TO THE LOCAL MEMORY
00001822                          1233  ; OUTPUT   - NONE
00001822                          1234  ; MODIFIES - NONE
00001822                          1235  ; -----------------------------------------------------------------------------
00001822                          1236m             UTLSPEN #XPLPENCL
00001822                          1237m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001822                          1238m ; INPUT    - #XPLPENCL COLOR IN FORMAT $00BBGGRR
00001822                          1239m ; OUTPUT   - NONE
00001822                          1240m ; MODIFIES - D0,D1
00001822                          1241m ; -----------------------------------------------------------------------------
0000182E                          1242m             UTLSFIL #XPLFILCL
0000182E                          1243m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000182E                          1244m ; INPUT    - #XPLFILCL COLOR IN FORMAT $00BBGGRR
0000182E                          1245m ; OUTPUT   - NONE
0000182E                          1246m ; MODIFIES - D0,D1
0000182E                          1247m ; -----------------------------------------------------------------------------
0000183A  48A7 7800               1248              MOVEM.W D1-D4,-(A7)
0000183E  3210                    1249              MOVE.W  (A0),D1
00001840  3428 0002               1250              MOVE.W  2(A0),D2
00001844  3601                    1251              MOVE.W  D1,D3
00001846  3802                    1252              MOVE.W  D2,D4
00001848  0643 0014               1253              ADD.W   #XPLSIZE,D3
0000184C  0644 0014               1254              ADD.W   #XPLSIZE,D4
00001850  103C 0058               1255              MOVE.B  #88,D0
00001854  4E4F                    1256              TRAP    #15
00001856  4C9F 001E               1257              MOVEM.W (A7)+,D1-D4
0000185A  4E75                    1258              RTS
0000185A  4E75                    1259  -------------------- end include --------------------
0000185C                          1260              INCLUDE "STATES.X68"            ; GAME STATES MANAGEMENT
0000185C                          1261  ; =============================================================================
0000185C                          1262  ; GAME STATE MANAGEMENT
0000185C                          1263  ; =============================================================================
0000185C                          1264  
0000185C                          1265  ; -----------------------------------------------------------------------------
0000185C                          1266  STAINIT
0000185C                          1267  ; INITALIZES THE STATE MANAGER
0000185C                          1268  ; INPUT    - NONE
0000185C                          1269  ; OUTPUT   - NONE
0000185C                          1270  ; MODIFIES - NONE
0000185C                          1271  ; -----------------------------------------------------------------------------
0000185C  33FC FFFF 000026C0      1272              MOVE.W  #STANONE,(STACUR)
00001864  33FC 0000 000026C2      1273              MOVE.W  #STAINTR,(STANEXT)
0000186C  4E75                    1274              RTS
0000186E                          1275  
0000186E                          1276  ; -----------------------------------------------------------------------------
0000186E                          1277  STAUPD
0000186E                          1278  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
0000186E                          1279  ; INPUT    - NONE
0000186E                          1280  ; OUTPUT   - NONE
0000186E                          1281  ; MODIFIES - NONE
0000186E                          1282  ; -----------------------------------------------------------------------------
0000186E  48E7 8080               1283              MOVEM.L D0/A0,-(A7)
00001872  4280                    1284              CLR.L   D0
00001874  3039 000026C2           1285              MOVE.W  (STANEXT),D0
0000187A  B079 000026C0           1286              CMP.W   (STACUR),D0
00001880  6700 0012               1287              BEQ     .DOUPD
00001884  33C0 000026C0           1288              MOVE.W  D0,(STACUR)             ; IF STATE CHANGED, DO INIT
0000188A  E588                    1289              LSL.L   #2,D0
0000188C  2040                    1290              MOVE.L  D0,A0
0000188E  2068 18AC               1291              MOVE.L  .INITBL(A0),A0
00001892  4E90                    1292              JSR     (A0)
00001894  4280                    1293  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
00001896  3039 000026C0           1294              MOVE.W  (STACUR),D0
0000189C  E588                    1295              LSL.L   #2,D0
0000189E  2040                    1296              MOVE.L  D0,A0
000018A0  2068 18B8               1297              MOVE.L  .UPDTBL(A0),A0
000018A4  4E90                    1298              JSR     (A0)
000018A6  4CDF 0101               1299              MOVEM.L (A7)+,D0/A0
000018AA  4E75                    1300              RTS
000018AC= 00001176 00001392 ...   1301  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY
000018B8= 00001902 000018EE ...   1302  .UPDTBL     DC.L    STAINTRU,STAPLAYU,STAGOVRU
000018C4                          1303  
000018C4                          1304  ; -----------------------------------------------------------------------------
000018C4                          1305  STAPLOT
000018C4                          1306  ; PERFORMS STATE PLOT
000018C4                          1307  ; INPUT    - NONE
000018C4                          1308  ; OUTPUT   - NONE
000018C4                          1309  ; MODIFIES - NONE
000018C4                          1310  ; -----------------------------------------------------------------------------
000018C4  48E7 8080               1311              MOVEM.L D0/A0,-(A7)
000018C8  4280                    1312              CLR.L   D0
000018CA  3039 000026C0           1313              MOVE.W  (STACUR),D0
000018D0  E588                    1314              LSL.L   #2,D0
000018D2  2040                    1315              MOVE.L  D0,A0
000018D4  2068 18E0               1316              MOVE.L  .PLTTBL(A0),A0
000018D8  4E90                    1317              JSR     (A0)
000018DA  4CDF 0101               1318              MOVEM.L (A7)+,D0/A0
000018DE  4E75                    1319              RTS
000018E0= 00001918 000018FA ...   1320  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAGOVRP
000018EC                          1321  
000018EC                          1322  ; -----------------------------------------------------------------------------
000018EC                          1323  STAEMPTY
000018EC                          1324  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000018EC                          1325  ; INPUT    - NONE
000018EC                          1326  ; OUTPUT   - NONE
000018EC                          1327  ; MODIFIES - NONE
000018EC                          1328  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000018EC                          1329  ; -----------------------------------------------------------------------------
000018EC  4E75                    1330              RTS
000018EE                          1331  
000018EE                          1332  ; -----------------------------------------------------------------------------
000018EE  =00001392               1333  STAPLAYI    EQU     PLRINIT
000018EE                          1334  ; PLAY STATE INITIALIZATION.
000018EE                          1335  ; INPUT    - NONE
000018EE                          1336  ; OUTPUT   - NONE
000018EE                          1337  ; MODIFIES - NONE
000018EE                          1338  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000018EE                          1339  ; -----------------------------------------------------------------------------
000018EE                          1340  
000018EE                          1341  ; -----------------------------------------------------------------------------
000018EE                          1342  STAPLAYU
000018EE                          1343  ; PLAY STATE UPDATE
000018EE                          1344  ; INPUT    - NONE
000018EE                          1345  ; OUTPUT   - NONE
000018EE                          1346  ; MODIFIES - NONE
000018EE                          1347  ; -----------------------------------------------------------------------------
000018EE  4EB8 13B8               1348              JSR     PLRUPD
000018F2  4EB8 1788               1349              JSR     SPWUPD
000018F6  6000 FC82               1350              BRA     AGLUPD
000018FA                          1351  
000018FA                          1352  ; -----------------------------------------------------------------------------
000018FA                          1353  STAPLAYP
000018FA                          1354  ; PLAY STATE PLOT
000018FA                          1355  ; INPUT    - NONE
000018FA                          1356  ; OUTPUT   - NONE
000018FA                          1357  ; MODIFIES - NONE
000018FA                          1358  ; -----------------------------------------------------------------------------
000018FA  4EB8 159E               1359              JSR     AGLPLOT
000018FE  6000 FB98               1360              BRA     PLRPLOT
00001902                          1361  
00001902                          1362  ; -----------------------------------------------------------------------------
00001902  =00001176               1363  STAINTRI    EQU     DMMINIT
00001902                          1364  ; INTRO STATE INIT
00001902                          1365  ; INPUT    - NONE
00001902                          1366  ; OUTPUT   - NONE
00001902                          1367  ; MODIFIES - NONE
00001902                          1368  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001902                          1369  ; -----------------------------------------------------------------------------
00001902                          1370  
00001902                          1371  ; -----------------------------------------------------------------------------
00001902                          1372  STAINTRU
00001902                          1373  ; INTRO STATE UPDATE
00001902                          1374  ; INPUT    - NONE
00001902                          1375  ; OUTPUT   - NONE
00001902                          1376  ; MODIFIES - NONE
00001902                          1377  ; -----------------------------------------------------------------------------
00001902  0839 0004 00001A1B      1378              BTST.B  #KBDBITF1,(KBDEDGE)
0000190A  6700 000A               1379              BEQ     .END
0000190E  33FC 0001 000026C2      1380              MOVE.W  #STAPLAY,(STANEXT)
00001916  4E75                    1381  .END        RTS
00001918                          1382  
00001918                          1383  ; -----------------------------------------------------------------------------
00001918                          1384  STAINTRP
00001918                          1385  ; INTRO STATE PLOT
00001918                          1386  ; INPUT    - NONE
00001918                          1387  ; OUTPUT   - NONE
00001918                          1388  ; MODIFIES - NONE
00001918                          1389  ; -----------------------------------------------------------------------------
00001918  48E7 C040               1390              MOVEM.L A1/D0-D1,-(A7)
0000191C                          1391m             UTLLOCT INTTITX,INTTITY
0000191C                          1392m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000191C                          1393m ; INPUT    - INTTITX X, INTTITY Y
0000191C                          1394m ; OUTPUT   - NONE
0000191C                          1395m ; MODIFIES - D0,D1
0000191C                          1396m ; -----------------------------------------------------------------------------
00001926                          1397m             UTLSPEN #INTTITC
00001926                          1398m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001926                          1399m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR
00001926                          1400m ; OUTPUT   - NONE
00001926                          1401m ; MODIFIES - D0,D1
00001926                          1402m ; -----------------------------------------------------------------------------
00001932                          1403m             UTLSFIL #$00000000
00001932                          1404m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001932                          1405m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001932                          1406m ; OUTPUT   - NONE
00001932                          1407m ; MODIFIES - D0,D1
00001932                          1408m ; -----------------------------------------------------------------------------
0000193A  43F9 00001976           1409              LEA     .TITSTR,A1
00001940  103C 000E               1410              MOVE.B  #14,D0
00001944  4E4F                    1411              TRAP    #15
00001946                          1412  
00001946                          1413m             UTLLOCT INTPRSX,INTPRSY
00001946                          1414m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001946                          1415m ; INPUT    - INTPRSX X, INTPRSY Y
00001946                          1416m ; OUTPUT   - NONE
00001946                          1417m ; MODIFIES - D0,D1
00001946                          1418m ; -----------------------------------------------------------------------------
00001950                          1419m             UTLSPEN #INTPRSC
00001950                          1420m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001950                          1421m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR
00001950                          1422m ; OUTPUT   - NONE
00001950                          1423m ; MODIFIES - D0,D1
00001950                          1424m ; -----------------------------------------------------------------------------
0000195C                          1425m             UTLSFIL #$00000000
0000195C                          1426m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000195C                          1427m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000195C                          1428m ; OUTPUT   - NONE
0000195C                          1429m ; MODIFIES - D0,D1
0000195C                          1430m ; -----------------------------------------------------------------------------
00001964  43F9 00001989           1431              LEA     .PRSSTR,A1
0000196A  103C 000E               1432              MOVE.B  #14,D0
0000196E  4E4F                    1433              TRAP    #15
00001970  4CDF 0203               1434              MOVEM.L (A7)+,A1/D0-D1
00001974  4E75                    1435              RTS
00001976                          1436  
00001976= 53 54 41 52 20 46 ...   1437  .TITSTR     DC.B    'STAR FIGHTER 68000',0
00001989= 50 55 53 48 20 46 ...   1438  .PRSSTR     DC.B    'PUSH FIRE TO START',0
0000199C                          1439              DS.W    0
0000199C                          1440  
0000199C                          1441  ; -----------------------------------------------------------------------------
0000199C                          1442  STAGOVRU
0000199C                          1443  ; GAME OVER STATE UPDATE
0000199C                          1444  ; INPUT    - NONE
0000199C                          1445  ; OUTPUT   - NONE
0000199C                          1446  ; MODIFIES - NONE
0000199C                          1447  ; -----------------------------------------------------------------------------
0000199C  0839 0004 00001A1B      1448              BTST.B  #KBDBITF1,(KBDEDGE)
000019A4  6700 000A               1449              BEQ     .END
000019A8  33FC 0000 000026C2      1450              MOVE.W  #STAINTR,(STANEXT)
000019B0  4E75                    1451  .END        RTS
000019B2                          1452  
000019B2                          1453  ; -----------------------------------------------------------------------------
000019B2                          1454  STAGOVRP
000019B2                          1455  ; GAME OVER STATE PLOT
000019B2                          1456  ; INPUT    - NONE
000019B2                          1457  ; OUTPUT   - NONE
000019B2                          1458  ; MODIFIES - NONE
000019B2                          1459  ; -----------------------------------------------------------------------------
000019B2  48E7 C040               1460              MOVEM.L A1/D0-D1,-(A7)
000019B6                          1461m             UTLLOCT GOVSTRX,GOVSTRY
000019B6                          1462m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000019B6                          1463m ; INPUT    - GOVSTRX X, GOVSTRY Y
000019B6                          1464m ; OUTPUT   - NONE
000019B6                          1465m ; MODIFIES - D0,D1
000019B6                          1466m ; -----------------------------------------------------------------------------
000019C0                          1467m             UTLSPEN #GOVSTRC
000019C0                          1468m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000019C0                          1469m ; INPUT    - #GOVSTRC COLOR IN FORMAT $00BBGGRR
000019C0                          1470m ; OUTPUT   - NONE
000019C0                          1471m ; MODIFIES - D0,D1
000019C0                          1472m ; -----------------------------------------------------------------------------
000019CC                          1473m             UTLSFIL #$00000000
000019CC                          1474m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019CC                          1475m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019CC                          1476m ; OUTPUT   - NONE
000019CC                          1477m ; MODIFIES - D0,D1
000019CC                          1478m ; -----------------------------------------------------------------------------
000019D4  43F9 000019E6           1479              LEA     .GOVSTR,A1
000019DA  103C 000E               1480              MOVE.B  #14,D0
000019DE  4E4F                    1481              TRAP    #15
000019E0  4CDF 0203               1482              MOVEM.L (A7)+,A1/D0-D1
000019E4  4E75                    1483              RTS
000019E6                          1484  
000019E6= 47 41 4D 45 20 20 ...   1485  .GOVSTR     DC.B    'GAME  OVER',0
000019F2                          1486              DS.W    0
000019F2                          1487  
000019F2                          1488  -------------------- end include --------------------
000019F2                          1489  
000019F2                          1490              ; TO DO: PUT YOUR GAME-RELATED INCLUDES HERE
000019F2                          1491  
000019F2                          1492  ; --- INITIALIZE --------------------------------------------------------------
000019F2                          1493  
000019F2  4EB8 1000               1494  START       JSR     SYSINIT
000019F6                          1495              ; TO DO: CALL GAME INITIALIZATION CODE HERE
000019F6  4EB8 185C               1496              JSR     STAINIT                 ; INITIALIZE GAME STATE
000019FA                          1497  
000019FA                          1498  
000019FA                          1499  ; --- UPDATE ------------------------------------------------------------------
000019FA                          1500  
000019FA  4E40                    1501  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
000019FC                          1502  
000019FC                          1503              ; TO DO: CALL GAME UPDATE CODE HERE
000019FC  4EB8 186E               1504              JSR     STAUPD                  ; UPDATE DEPENDING ON THE STATE
00001A00                          1505  
00001A00                          1506  
00001A00                          1507  ; --- WAIT SYNCH --------------------------------------------------------------
00001A00                          1508  
00001A00  4A39 00001A1C           1509  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001A06  67F8                    1510              BEQ     .WINT
00001A08  4239 00001A1C           1511              CLR.B   (SCRINTCT)
00001A0E                          1512  
00001A0E                          1513  ; --- PLOT --------------------------------------------------------------------
00001A0E                          1514  
00001A0E                          1515              ; TO DO: CALL GAME PLOT CODE HERE
00001A0E  4EB8 18C4               1516              JSR     STAPLOT                 ; PLOT DEPENDING ON THE STATE
00001A12  4E41                    1517              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001A14  60E4                    1518              BRA     .LOOP
00001A16  FFFF FFFF               1519              SIMHALT
00001A1A                          1520  
00001A1A                          1521  ; --- VARIABLES ---------------------------------------------------------------
00001A1A                          1522  
00001A1A                          1523              INCLUDE "SYSVAR.X68"
00001A1A                          1524  ; =============================================================================
00001A1A                          1525  ; SYSTEM VARS
00001A1A                          1526  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001A1A                          1527  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001A1A                          1528  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001A1A                          1529  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001A1A                          1530  ; THIS IS GOOD ENOUGH.
00001A1A                          1531  ; =============================================================================
00001A1A                          1532  
00001A1A                          1533  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001A1A                          1534  
00001A1A                          1535  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001A1B                          1536  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001A1C                          1537  
00001A1C                          1538              DS.W    0
00001A1C                          1539  
00001A1C                          1540  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001A1C                          1541  
00001A1C                          1542  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001A1D                          1543  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001A1E                          1544              DS.W    0
00001A1E                          1545  
00001A1E                          1546  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001A1E                          1547  
00001A40                          1548              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001A40                          1549  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
000026C0                          1550              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
000026C0                          1551  
000026C0                          1552  
000026C0                          1553  -------------------- end include --------------------
000026C0                          1554              INCLUDE "VAR.X68"
000026C0                          1555  ; =============================================================================
000026C0                          1556  ; GAME VARS
000026C0                          1557  ; =============================================================================
000026C0                          1558  
000026C0                          1559  ; TO DO: DECLARE GAME VARIABLES HERE.
000026C0                          1560  
000026C0                          1561  
000026C0                          1562  ; --- GAME STATE RELATED VARIABLES --------------------------------------------
000026C0                          1563  
000026C0                          1564  STACUR      DS.W    1                       ; CURRENT GAME STATE
000026C2                          1565  STANEXT     DS.W    1                       ; NEXT GAME STATE
000026C4                          1566  
000026C4                          1567  ; --- PLAYER RELATED VARIABLES ------------------------------------------------
000026C4                          1568  
000026C4                          1569  PLRPOSX     DS.W    1                       ; PLAYER X POSITION (PIXELS)
000026C6                          1570  PLRPOSY     DS.W    1                       ; PLAYER Y POSITION (PIXELS)
000026C8                          1571  PLRENER     DS.W    1                       ; PLAYER ENERGY
000026CA                          1572  PLRSCORE    DS.W    1                       ; PLAYER SCORE
000026CC                          1573  
000026CC                          1574  
000026CC                          1575  PLRLIFE     DS.W    1                       ; PLAYER IN GAME LIFE
000026CE                          1576  
000026CE                          1577  PLRDMG      DS.B    1                       ; BIT0: UPD DAMAGE, BIT1 PLOT DMG
000026D0                          1578              DS.W    0
000026D0                          1579  
000026D0                          1580  ; --- BOMBMAN RELATED VARIABLES ------------------------------------------------
000026D0                          1581  
000026D0                          1582  BMANPOSX     DS.W    1                       ; BOMBMAN X POSITION  (PIXELS) 
000026D2                          1583  BMANPOSY     DS.W    1                       ; BOMBMAN Y POSITION  (PIXELS)
000026D4                          1584  BMNSPEED     DS.W    1                       ; BOMBMAN SPEED (PIXELS PER INT)
000026D6                          1585  
000026D6                          1586  ; --- UTILITY VARIABLES ------------------------------------------------------
000026D6                          1587  
000026D6                          1588  UTLRNDIX    DS.B    1                       ; NEXT INDEX TO RANDOM NUMBER
000026D8                          1589              DS.W    0
000026D8                          1590  
000026D8                          1591  
000026D8                          1592  
000026D8                          1593  
000026D8                          1594  
000026D8                          1595  
000026D8                          1596  -------------------- end include --------------------
000026D8                          1597              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              1560
AGLADD:END          1576
AGLKILL             1222
AGLPLOT             159E
AGLPLOT:END         15BE
AGLPLOT:LOOP        15A6
AGLUPD              157A
AGLUPD:END          1598
AGLUPD:LOOP         1582
ASTDMG              A
ASTFILCL            FF00
ASTINIT             167E
ASTNFRAG            5
ASTPENCL            FFFFFF
ASTPLOT             1710
ASTSCORE            5
ASTSIZE             3C
ASTTYPE             2
ASTUPD              16A6
ASTUPD:BOUNCE       16D0
ASTUPD:COLPLAY      16D4
ASTUPD:END          1706
ASTUPD:KILL         170A
ASTXPLO             174A
ASTXPLO:LOOP        1752
BMANPOSX            26D0
BMANPOSY            26D2
BMNHEIGH            1E
BMNSPEED            26D4
BMNWIDTH            1E
DMMALLOC            1208
DMMALLOC:END        1220
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1A40
DMMFCOM             11E2
DMMFFND             11F0
DMMFIRST            1198
DMMFLOOP            11D6
DMMFRCOM            11AA
DMMFREE             1222
DMMFRFND            11B8
DMMFRLOP            119E
DMMFRSTO            11D0
DMMINIT             1176
DMMINIT:LOOP        1184
DMMNEXT             11BA
DMMNEXTO            11F2
DMMSYSID            0
GOVSTRC             FFFFFF
GOVSTRX             23
GOVSTRY             F
INTPRSC             FFFFFF
INTPRSX             1F
INTPRSY             1A
INTTITC             FF
INTTITX             1F
INTTITY             5
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1A1B
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:DOWN        1112
KBDREAD:FIN         1162
KBDREAD:FIRE1       1122
KBDREAD:FIRE2       1132
KBDREAD:FIRE3       1142
KBDREAD:PAUSE       1152
KBDREAD:RIGHT       1102
KBDREAD:UP          10F2
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1A1A
PLRCLIFE            3
PLRDMG              26CE
PLRDMGCL            FF
PLRENER             26C8
PLRHEIGH            F
PLRINIEN            1F4
PLRINIT             1392
PLRLIFE             26CC
PLRLIFEC            FF
PLRLIFEH            14
PLRLIFEY            1B8
PLRNRMCL            C0FF
PLRPBDMG            1
PLRPLOT             1498
PLRPLOT:NODMG       14B4
PLRPLOT:SCORESTR    1558
PLRPMDMG            2
PLRPOSX             26C4
PLRPOSY             26C6
PLRSCORE            26CA
PLRSPEED            5
PLRTXTCL            FFFFFF
PLRTXTX             2
PLRTXTY             1
PLRUBDMG            0
PLRUMDMG            1
PLRUPD              13B8
PLRUPD:CHKDN        1438
PLRUPD:CHKRT        1418
PLRUPD:CHKUP        13FC
PLRUPD:MDONE        1458
PLRUPD:NODMG        13D8
PLRUPD:NOFIRE       1494
PLRWIDTH            A0
SCRCYCCT            1A1D
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1A1C
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            280
SHTHEIGH            3
SHTINIT             15C4
SHTPLOT             163E
SHTSPEED            A
SHTTYPE             1
SHTUPD              15CC
SHTUPD:END          1622
SHTUPD:EXPLO        1628
SHTUPD:LOOP         15F4
SHTWIDTH            14
SPWUPD              1788
SPWUPD:END          17AE
STACUR              26C0
STAEMPTY            18EC
STAGOVR             2
STAGOVRP            19B2
STAGOVRP:GOVSTR     19E6
STAGOVRU            199C
STAGOVRU:END        19B0
STAINIT             185C
STAINTR             0
STAINTRI            1176
STAINTRP            1918
STAINTRP:PRSSTR     1989
STAINTRP:TITSTR     1976
STAINTRU            1902
STAINTRU:END        1916
STANEXT             26C2
STANONE             FFFFFFFF
STAPLAY             1
STAPLAYI            1392
STAPLAYP            18FA
STAPLAYU            18EE
STAPLOT             18C4
STAPLOT:PLTTBL      18E0
START               19F2
START:LOOP          19FA
START:WINT          1A00
STAUPD              186E
STAUPD:DOUPD        1894
STAUPD:INITBL       18AC
STAUPD:UPDTBL       18B8
SYSINIT             1000
UTLCHCOL            1240
UTLCHCOL:END        126E
UTLCHCOL:NOCOL      126C
UTLINIT             1238
UTLLOCT             254
UTLRAND             1274
UTLRAND:RANDVEC     1292
UTLRNDIX            26D6
UTLSFIL             12A
UTLSPEN             0
XPLFILCL            CCCCCC
XPLINIT             17B4
XPLPENCL            DDDDDD
XPLPLOT             1822
XPLSIZE             14
XPLTYPE             3
XPLUPD              17E4
XPLUPD:END          1818
XPLUPD:KILL         181C
